{"ast":null,"code":"const Image2Base64 = async file => {\n  const imgReader = new FileReader();\n  imgReader.readAsDataURL(file);\n  const imgData = new Promise((res, rej) => {\n    imgReader.onload = () => res(imgReader.result);\n    imgReader.onerror = err => rej(err);\n  });\n  return imgData;\n};\n_c = Image2Base64;\nexport default Image2Base64;\nvar _c;\n$RefreshReg$(_c, \"Image2Base64\");","map":{"version":3,"names":["Image2Base64","file","imgReader","FileReader","readAsDataURL","imgData","Promise","res","rej","onload","result","onerror","err","_c","$RefreshReg$"],"sources":["/home/jerry/Desktop/.myObsession/workspace/all-Stack-Projects/ubelle/client/src/utils/image2Base64.jsx"],"sourcesContent":["const Image2Base64 = async (file) => {\n    const imgReader = new FileReader()\n    imgReader.readAsDataURL(file)\n\n    const imgData = new Promise((res, rej) => {\n        imgReader.onload = () => res(imgReader.result)\n        imgReader.onerror = err => rej(err)\n    })\n\n    return imgData\n}\n\nexport default Image2Base64"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,IAAI,IAAK;EACjC,MAAMC,SAAS,GAAG,IAAIC,UAAU,CAAC,CAAC;EAClCD,SAAS,CAACE,aAAa,CAACH,IAAI,CAAC;EAE7B,MAAMI,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IACtCN,SAAS,CAACO,MAAM,GAAG,MAAMF,GAAG,CAACL,SAAS,CAACQ,MAAM,CAAC;IAC9CR,SAAS,CAACS,OAAO,GAAGC,GAAG,IAAIJ,GAAG,CAACI,GAAG,CAAC;EACvC,CAAC,CAAC;EAEF,OAAOP,OAAO;AAClB,CAAC;AAAAQ,EAAA,GAVKb,YAAY;AAYlB,eAAeA,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}